
	// Place your snippets for c here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	 {
		"Create Main Function": {
			"prefix": "main",
			"body": [
				"int main()",
				"{",
				"\t$0",
				"\treturn 0;",
				"}"
			],
			"description": "Create main function"
		},
		"Printf with Placeholders": {
			"prefix": "print",
			"body": [
				"printf(\"${1:text} ${2:format}\", ${3:variables});",
				"$0"
			],
			"description": "printf with placeholders"
		},
		"scanf with Placeholders": {
			"prefix": "scan",
			"body": [
				"scanf(\"${1:format}\", ${2:address});",
				"$0"
			],
			"description": "printf with placeholders"
		},
		"New file with headers": {
			"prefix": "newFile",
			"body": [
				"#include <stdio.h>",
				"#include <stdlib.h>",
				"#include <string.h>"
				"\n"
				"\n"
				"\n"
				"int main()",
				"{",
				"\t$0",
				"\treturn 0;",
				"}"
			],
			"description": "Newfile with basic headers"
		},
		"General malloc": {
			"prefix": "mall",
			"body": [
				"(${1:Casting})malloc(${2:#ofElements} * sizeof(${3:type});",
				"$0"
				
			],
			"description": "malloc with or without casting"
		},
		"General calloc": {
			"prefix": "call",
			"body": [
				"(${1:Casting})calloc(${2:#ofElements},sizeof(${3:type});",
				"$0"
				
			],
			"description": "calloc with or without casting"
		},
		"typedef struct": {
			"prefix": "struct",
			"body": [
				"typedef struct ${1:name}",
				"{",
				"}${0:CapitalLetterName};"
							
			],
			"description": "typedef struct"
		},
		"function definition": {
			"prefix": "func",
			"body": [
				"${1:returType} ${2:Name}(${3:argType} ${4:argName})",
				"{",
				"\t$0",
				"}"
							
			],
			"description": "function helper"
	}	 
